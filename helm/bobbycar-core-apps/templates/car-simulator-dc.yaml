apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.carSimulator.name }}
    app.kubernetes.io/part-of: {{ .Values.appName }}
  name: {{ .Values.carSimulator.name }}
spec:
  replicas: {{ .Values.carSimulator.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.carSimulator.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.carSimulator.name }}
      name: {{ .Values.carSimulator.name }}
    spec:
      volumes:
        - name: config
          configMap:
            name: {{ .Values.carSimulator.name }}-config
            defaultMode: 420
        - name: java-truststore
          emptyDir: {}
        - name: drogue-ca
          configMap:
            name: trust-anchor
      initContainers:
      - name: truststore
        image: quay.io/ctrontesting/car-simulator:latest
        imagePullPolicy: Always
        command:
          - bash
          - -ec
          - |
            keytool -storepass 'SetecAstronomy' -import -alias ca -file /etc/drogue/ca/root-cert.pem -keystore /var/log/output/truststore.p12 -deststoretype PKCS12 -noprompt
        volumeMounts:
          - name: drogue-ca
            mountPath: /etc/drogue/ca
          - name: java-truststore
            readOnly: false
            mountPath: /var/log/output
      containers:
      - name: {{ .Values.carSimulator.name }}
        #image: quay.io/bobbycar/car-simulator:1.1.1
        image: quay.io/ctrontesting/car-simulator:latest
        imagePullPolicy: Always
        volumeMounts:
            - name: config
              readOnly: true
              mountPath: /opt/routes
            - name: java-truststore
              readOnly: true
              mountPath: /etc/drogue/ca
        env:
            - name: com.redhat.bobbycar.carsim.route
              value: '/opt/routes'
            - name: com.redhat.bobbycar.carsim.cars
              value: {{ .Values.carSimulator.config.carsimCars | quote }}
            - name: com.redhat.bobbycar.carsim.factor
              value: {{ .Values.carSimulator.config.carsimFactor | quote }}
            - name: com.redhat.bobbycar.carsim.repeat
              value: {{ .Values.carSimulator.config.carsimRepeat | quote }}
            - name: quarkus.log.level
              value: INFO
            - name: QUARKUS_LOG_CATEGORY_COMREDHAT_LEVEL
              value: DEBUG
            - name: com.redhat.bobbycar.carsim.delay
              value: {{ .Values.carSimulator.config.carsimDelay | quote }}
            - name: com.redhat.bobbycar.carsim.datagrid.url
              value: 'http://cache-service-{{ .Values.namespace }}.{{ .Values.ocpDomain }}'
            - name: quarkus.http.cors
              value: 'true'

            {{- include "mqtt.env-vars" (dict "root" . "direction" "incoming" "channel" "drogue-commands" ) | nindent 12 }}
            - name: mp.messaging.incoming.drogue-commands.topic
              value: "command/inbox/#"
            {{- include "mqtt.env-vars" (dict "root" . "direction" "outgoing" "channel" "drogue-telemetry" ) | nindent 12 }}

            - name: drogue.application
              value: {{ .Values.drogue.application | quote }}

        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        envFrom:
          - configMapRef: 
              name: {{ .Values.carSimulator.name }}-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
